# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 24baf43f68e7873ea339d2129fa2b79a5f3d3c6fcd7fd9e419828d2691835b5e
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          literal: '"1"'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      where_clause:
        keyword: where
        expression:
          column_reference:
            identifier: y
          comparison_operator:
            raw_comparison_operator: '='
          parameterized_expression:
            literal: '@z_test1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            bracketed:
              start_bracket: (
              expression:
                parameterized_expression:
                  literal: '@z2'
              comma: ','
              date_part: week
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            bracketed:
              start_bracket: (
              expression:
                parameterized_expression:
                  literal: '@_ab'
              comma: ','
              date_part: week
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            bracketed:
              start_bracket: (
              expression:
                parameterized_expression:
                  literal: '@a'
              comma: ','
              date_part: week
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: parse_date
            bracketed:
              start_bracket: (
              expression:
                literal: '"%Y%m"'
              comma: ','
              date_part: year
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          literal: '"1"'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      where_clause:
        keyword: where
        expression:
          column_reference:
            identifier: y
          comparison_operator:
            raw_comparison_operator: '='
          parameterized_expression:
            question_mark: '?'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: concat
            bracketed:
            - start_bracket: (
            - expression:
                literal: '"1"'
            - comma: ','
            - expression:
                parameterized_expression:
                  question_mark: '?'
            - end_bracket: )
- statement_terminator: ;
