# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 83030326fd96d596cd3219e27d80d62424d39acc8efd62067377072ac670d549
file:
  statement:
    set_expression:
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: item
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: RANK
            unparsable:
            - bracketed:
                start_bracket: (
                end_bracket: )
            - raw: OVER
            - bracketed:
              - start_bracket: (
              - raw: PARTITION
              - raw: BY
              - raw: category
              - raw: ORDER
              - raw: BY
              - raw: purchases
              - raw: DESC
              - end_bracket: )
            - raw: AS
            - raw: rank
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: Produce
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - identifier: Produce
            - dot: .
            - identifier: category
            comparison_operator: '='
            literal: "'vegetable'"
        qualify_clause:
          keyword: QUALIFY
          expression:
            column_reference:
              identifier: rank
            comparison_operator: <=
            literal: '3'
    - set_operator:
      - keyword: UNION
      - keyword: ALL
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: item
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: RANK
            unparsable:
            - bracketed:
                start_bracket: (
                end_bracket: )
            - raw: OVER
            - bracketed:
              - start_bracket: (
              - raw: PARTITION
              - raw: BY
              - raw: category
              - raw: ORDER
              - raw: BY
              - raw: purchases
              - raw: DESC
              - end_bracket: )
            - raw: AS
            - raw: rank
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: Produce
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - identifier: Produce
            - dot: .
            - identifier: category
            comparison_operator: '='
            literal: "'vegetable'"
        qualify_clause:
          keyword: QUALIFY
          expression:
            column_reference:
              identifier: rank
            comparison_operator: <=
            literal: '3'
