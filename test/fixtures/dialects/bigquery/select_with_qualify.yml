# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ae7dda9964b4af461c15f4718814367a89995851ec6b3d4503bbf7221809a8f6
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: item
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      limit_clause:
        keyword: LIMIT
        literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: item
      limit_clause:
        keyword: LIMIT
        literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      limit_clause:
        keyword: LIMIT
        literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      unparsable:
      - keyword: WINDOW
      - raw: item_window
      - raw: AS
      - bracketed:
        - start_bracket: (
        - raw: PARTITION
        - raw: BY
        - raw: category
        - raw: ORDER
        - raw: BY
        - raw: purchases
        - raw: ROWS
        - raw: BETWEEN
        - raw: '2'
        - raw: PRECEDING
        - raw: AND
        - raw: '2'
        - raw: FOLLOWING
        - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: item
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: RANK
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: PARTITION
            - raw: BY
            - raw: category
            - raw: ORDER
            - raw: BY
            - raw: purchases
            - raw: DESC
            - end_bracket: )
          - raw: AS
          - raw: rank
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Produce
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - identifier: Produce
          - dot: .
          - identifier: category
          comparison_operator: '='
          literal: "'vegetable'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          column_reference:
            identifier: rank
          comparison_operator: <=
          literal: '3'
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: item
      unparsable:
      - keyword: WINDOW
      - raw: item_window
      - raw: AS
      - bracketed:
        - start_bracket: (
        - raw: PARTITION
        - raw: BY
        - raw: category
        - raw: ORDER
        - raw: BY
        - raw: purchases
        - raw: ROWS
        - raw: BETWEEN
        - raw: '2'
        - raw: PRECEDING
        - raw: AND
        - raw: '2'
        - raw: FOLLOWING
        - end_bracket: )
- statement_terminator: ;
