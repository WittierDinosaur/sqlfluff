# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: beb4e0b6173dc931b70f8cd1d18ab0609e371c625c2ac95f80e339c3ba13bbf8
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - identifier: gmv
          - dot: .
          - identifier: _merchant_key
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: gmv
          - dot: .
          - identifier: order_created_at
      - comma: ','
      - select_clause_element:
          unparsable:
          - raw: EXTRACT
          - bracketed:
            - start_bracket: (
            - raw: DATE
            - raw: FROM
            - raw: gmv
            - raw: .
            - raw: order_created_at
            - end_bracket: )
          - raw: AS
          - raw: order_dt
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: my_table
            alias_expression:
              keyword: as
              identifier: gmv
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - identifier: gmv
          - dot: .
          - identifier: datetime
        - comparison_operator: '>='
        - column_reference:
            identifier: DATE_TRUNC
        unparsable:
          bracketed:
          - start_bracket: (
          - raw: DATE_SUB
          - bracketed:
            - start_bracket: (
            - raw: CURRENT_DATE
            - bracketed:
                start_bracket: (
                end_bracket: )
            - comma: ','
            - raw: INTERVAL
            - raw: '2'
            - raw: YEAR
            - end_bracket: )
          - comma: ','
          - raw: year
          - end_bracket: )
      limit_clause:
        keyword: LIMIT
        literal: '1'
