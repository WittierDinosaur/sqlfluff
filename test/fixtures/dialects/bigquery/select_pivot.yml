# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cb4bb46c1c50c35255a0002f205b703815dee68af200334f9aa5c4ada653278f
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        unparsable:
        - keyword: FROM
        - bracketed:
          - start_bracket: (
          - raw: SELECT
          - raw: '*'
          - raw: FROM
          - raw: Produce
          - end_bracket: )
        - raw: PIVOT
        - bracketed:
          - start_bracket: (
          - raw: SUM
          - bracketed:
              start_bracket: (
              raw: sales
              end_bracket: )
          - raw: FOR
          - raw: quarter
          - raw: IN
          - bracketed:
            - start_bracket: (
            - raw: "'Q1'"
            - comma: ','
            - raw: "'Q2'"
            - comma: ','
            - raw: "'Q3'"
            - comma: ','
            - raw: "'Q4'"
            - end_bracket: )
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        unparsable:
        - keyword: FROM
        - bracketed:
          - start_bracket: (
          - raw: SELECT
          - raw: sales
          - comma: ','
          - raw: quarter
          - raw: FROM
          - raw: Produce
          - end_bracket: )
        - raw: PIVOT
        - bracketed:
          - start_bracket: (
          - raw: SUM
          - bracketed:
              start_bracket: (
              raw: sales
              end_bracket: )
          - raw: FOR
          - raw: quarter
          - raw: IN
          - bracketed:
            - start_bracket: (
            - raw: "'Q1'"
            - comma: ','
            - raw: "'Q2'"
            - comma: ','
            - raw: "'Q3'"
            - comma: ','
            - raw: "'Q4'"
            - end_bracket: )
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        unparsable:
        - keyword: FROM
        - bracketed:
          - start_bracket: (
          - raw: SELECT
          - raw: '*'
          - raw: FROM
          - raw: Produce
          - end_bracket: )
        - raw: PIVOT
        - bracketed:
          - start_bracket: (
          - raw: SUM
          - bracketed:
              start_bracket: (
              raw: sales
              end_bracket: )
          - raw: FOR
          - raw: quarter
          - raw: IN
          - bracketed:
            - start_bracket: (
            - raw: "'Q1'"
            - comma: ','
            - raw: "'Q2'"
            - comma: ','
            - raw: "'Q3'"
            - end_bracket: )
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        unparsable:
        - keyword: FROM
        - bracketed:
          - start_bracket: (
          - raw: SELECT
          - raw: sales
          - comma: ','
          - raw: quarter
          - raw: FROM
          - raw: Produce
          - end_bracket: )
        - raw: PIVOT
        - bracketed:
          - start_bracket: (
          - raw: SUM
          - bracketed:
              start_bracket: (
              raw: sales
              end_bracket: )
          - raw: FOR
          - raw: quarter
          - raw: IN
          - bracketed:
            - start_bracket: (
            - raw: "'Q1'"
            - comma: ','
            - raw: "'Q2'"
            - comma: ','
            - raw: "'Q3'"
            - end_bracket: )
          - end_bracket: )
- statement_terminator: ;
