# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5764f633f2c86d12fa0078b5953faa6d8436c1be35cd0f8ddbdad19618fa6c1a
file:
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - keyword: if
    - keyword: not
    - keyword: exists
    - table_reference:
        identifier: '"p08_base"'
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            expression:
              column_reference:
                identifier: VALUE
              snowflake_semi_structured_expression:
                colon: ':'
                semi_structured_element: id
              cast_expression:
                casting_operator: '::'
                data_type:
                  data_type_identifier: TEXT
            alias_expression:
              identifier: id
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: '"_p08"'
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        identifier: table_name
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: col1
      - raw: VARCHAR
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: mytable
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: amount
      - raw: number
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: mytable_copy2
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            expression:
              column_reference:
                identifier: b
              binary_operator: +
              literal: '1'
            alias_expression:
              keyword: as
              identifier: c
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: mytable_copy
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: mytable_2
    - keyword: like
    - table_reference:
        identifier: mytable
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: temporary
    - keyword: table
    - table_reference:
        identifier: demo_temporary
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: temp
    - keyword: table
    - table_reference:
        identifier: demo_temp
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: local
    - keyword: temporary
    - keyword: table
    - table_reference:
        identifier: demo_local_temporary
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: local
    - keyword: temp
    - keyword: table
    - table_reference:
        identifier: demo_local_temp
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: global
    - keyword: temporary
    - keyword: table
    - table_reference:
        identifier: demo_global_temporary
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: global
    - keyword: temp
    - keyword: table
    - table_reference:
        identifier: demo_global_temp
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: volatile
    - keyword: table
    - table_reference:
        identifier: demo_volatile
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: i
      - raw: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: example
    unparsable:
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: number
      - raw: comment
      - raw: "'a column comment'"
      - end_bracket: )
    - raw: comment
    - raw: '='
    - raw: "'a table comment'"
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: testtable_summary
    unparsable:
    - bracketed:
      - start_bracket: (
      - raw: name
      - comma: ','
      - raw: summary_amount
      - end_bracket: )
    - raw: as
    - raw: select
    - raw: name
    - comma: ','
    - raw: amount1
    - raw: +
    - raw: amount2
    - raw: from
    - raw: testtable
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: testtable_summary
    unparsable:
    - bracketed:
      - start_bracket: (
      - raw: barry
      - raw: char
      - end_bracket: )
    - raw: as
    - raw: select
    - raw: name
    - comma: ','
    - raw: amount1
    - raw: +
    - raw: amount2
    - raw: from
    - raw: testtable
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: testtable_summary
    - keyword: as
    - select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: name
        - comma: ','
        - select_clause_element:
            expression:
            - column_reference:
                identifier: amount1
            - binary_operator: +
            - column_reference:
                identifier: amount2
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: testtable
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - binary_operator: or
    - keyword: replace
    - keyword: table
    - table_reference:
        identifier: parquet_col
    unparsable:
    - bracketed:
      - start_bracket: (
      - raw: custkey
      - raw: number
      - raw: default
      - raw: 'null'
      - comma: ','
      - raw: orderdate
      - raw: date
      - raw: default
      - raw: 'null'
      - comma: ','
      - raw: orderstatus
      - raw: varchar
      - bracketed:
          start_bracket: (
          raw: '100'
          end_bracket: )
      - raw: default
      - raw: 'null'
      - comma: ','
      - raw: price
      - raw: varchar
      - bracketed:
          start_bracket: (
          raw: '255'
          end_bracket: )
      - end_bracket: )
    - raw: as
    - raw: select
    - raw: $1
    - raw: ':'
    - raw: o_custkey
    - raw: '::'
    - raw: number
    - comma: ','
    - raw: $1
    - raw: ':'
    - raw: o_orderdate
    - raw: '::'
    - raw: date
    - comma: ','
    - raw: $1
    - raw: ':'
    - raw: o_orderstatus
    - raw: '::'
    - raw: text
    - comma: ','
    - raw: $1
    - raw: ':'
    - raw: o_totalprice
    - raw: '::'
    - raw: text
    - raw: from
    - raw: '@'
    - raw: my_stage
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: collation_demo
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: uncollated_phrase
      - raw: varchar
      - comma: ','
      - raw: utf8_phrase
      - raw: varchar
      - raw: collate
      - raw: "'utf8'"
      - comma: ','
      - raw: english_phrase
      - raw: varchar
      - raw: collate
      - raw: "'en'"
      - comma: ','
      - raw: spanish_phrase
      - raw: varchar
      - raw: collate
      - raw: "'sp'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: mytable
    unparsable:
    - raw: using
    - raw: template
    - bracketed:
      - start_bracket: (
      - raw: select
      - raw: array_agg
      - bracketed:
          start_bracket: (
          raw: object_construct
          bracketed:
            start_bracket: (
            raw: '*'
            end_bracket: )
          end_bracket: )
      - raw: from
      - raw: table
      - bracketed:
          start_bracket: (
          raw: infer_schema
          bracketed:
          - start_bracket: (
          - raw: location
          - raw: =>
          - raw: "'@mystage'"
          - comma: ','
          - raw: file_format
          - raw: =>
          - raw: "'my_parquet_format'"
          - end_bracket: )
          end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: dollar_sign_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: foo$bar
      - raw: boolean
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - identifier: dollar_sign_schema
      - dot: .
      - identifier: dollar_sign_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: foo$bar
      - raw: boolean
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        identifier: timestamp_column_default_value_demo
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: timestamp_col1
      - raw: TIMESTAMP_TZ
      - raw: NOT
      - raw: 'NULL'
      - raw: DEFAULT
      - raw: CURRENT_TIMESTAMP
      - comma: ','
      - raw: timestamp_col2
      - raw: TIMESTAMP_TZ
      - raw: DEFAULT
      - raw: CURRENT_TIMESTAMP
      - bracketed:
          start_bracket: (
          end_bracket: )
      - comma: ','
      - raw: timestamp_col3
      - raw: TIMESTAMP_TZ
      - raw: DEFAULT
      - raw: CURRENT_TIMESTAMP
      - bracketed:
          start_bracket: (
          raw: '2'
          end_bracket: )
      - comma: ','
      - raw: sysdate_col4
      - raw: TIMESTAMP_TZ
      - raw: DEFAULT
      - raw: SYSDATE
      - bracketed:
          start_bracket: (
          end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: test_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: test_column
      - raw: NUMBER
      - raw: autoincrement
      - bracketed:
        - start_bracket: (
        - raw: '0'
        - comma: ','
        - raw: '1'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - identifier: test_schema
      - dot: .
      - identifier: test_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: test_column
      - raw: NUMBER
      - raw: autoincrement
      - bracketed:
        - start_bracket: (
        - raw: '0'
        - comma: ','
        - raw: '1'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - binary_operator: or
    - keyword: replace
    - keyword: table
    - table_reference:
      - identifier: test_schema
      - dot: .
      - identifier: test_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: test_column
      - raw: NUMBER
      - raw: autoincrement
      - bracketed:
        - start_bracket: (
        - raw: '0'
        - comma: ','
        - raw: '1'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - identifier: test_schema
      - dot: .
      - identifier: test_table
    unparsable:
      bracketed:
      - start_bracket: (
      - raw: test_column
      - raw: INTEGER
      - raw: AUTOINCREMENT
      - end_bracket: )
- statement_terminator: ;
