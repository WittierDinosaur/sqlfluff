# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 80064a6bfb546297324e56461e86f488f6fdd9a10bea2655db7b705462adbecd
file:
- statement:
    unparsable:
    - raw: create
    - raw: or
    - raw: replace
    - raw: procedure
    - raw: sp_pi
    - bracketed:
        start_bracket: (
        end_bracket: )
    - raw: returns
    - raw: float
    - raw: not
    - raw: 'null'
    - raw: language
    - raw: javascript
    - raw: as
    - raw: "$$\n    return 3.1415926;\n    $$"
- statement_terminator: ;
- statement:
    unparsable:
    - raw: create
    - raw: or
    - raw: replace
    - raw: procedure
    - raw: stproc1
    - bracketed:
      - start_bracket: (
      - raw: FLOAT_PARAM1
      - raw: FLOAT
      - end_bracket: )
    - raw: returns
    - raw: string
    - raw: language
    - raw: javascript
    - raw: strict
    - raw: execute
    - raw: as
    - raw: owner
    - raw: as
    - raw: "$$\n    var sql_command = \n     \"INSERT INTO stproc_test_table1 (num_col1)\
        \ VALUES (\" + FLOAT_PARAM1 + \")\";\n    try {\n        snowflake.execute\
        \ (\n            {sqlText: sql_command}\n            );\n        return \"\
        Succeeded.\";   // Return a success/error indicator.\n        }\n    catch\
        \ (err)  {\n        return \"Failed: \" + err;   // Return a success/error\
        \ indicator.\n        }\n    $$"
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: OR
    - raw: REPLACE
    - raw: PROCEDURE
    - raw: public
    - raw: .
    - raw: test_procedure
    - bracketed:
      - start_bracket: (
      - raw: test_table
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          end_bracket: )
      - comma: ','
      - raw: test_col
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          end_bracket: )
      - end_bracket: )
    - raw: RETURNS
    - raw: VARCHAR
    - bracketed:
        start_bracket: (
        end_bracket: )
    - raw: LANGUAGE
    - raw: JAVASCRIPT
    - raw: AS
    - raw: "$$  \ntry {\n    var sql_command = \"ALTER TABLE \" + test_table + \"\
        \ DROP \" + tet_col;\n    snowflake.execute ({sqlText: sql_command});\n  \
        \  return \"Succeeded.\";\n}\ncatch (err) {\n   return \"Failed: execute \"\
        + sql_command +\". Error : \"+ err;   // Return a success/error indicator.\n\
        }\n$$"
- statement_terminator: ;
