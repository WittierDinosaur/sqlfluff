# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: acda4e31c08d2c0ff5971c501394e643cb31c3eb09a5ab34e5189fbe776f77d1
file:
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: t1
    - keyword: SCHEDULE
    - comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - keyword: USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE
    - comparison_operator: '='
    - literal: "'XSMALL'"
    - keyword: AS
    - statement:
        insert_statement:
          unparsable:
          - keyword: INSERT
          - raw: INTO
          - raw: mytable
          - bracketed:
              start_bracket: (
              raw: ts
              end_bracket: )
          - raw: VALUES
          - bracketed:
              start_bracket: (
              raw: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: mytask_hour
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: mywh
    - keyword: SCHEDULE
    - comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - keyword: AS
    - statement:
        insert_statement:
          unparsable:
          - keyword: INSERT
          - raw: INTO
          - raw: mytable
          - bracketed:
              start_bracket: (
              raw: ts
              end_bracket: )
          - raw: VALUES
          - bracketed:
            - start_bracket: (
            - raw: '1'
            - comma: ','
            - raw: '2'
            - comma: ','
            - raw: '3'
            - end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - object_reference:
        identifier: t1
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: mywh
    - keyword: SCHEDULE
    - comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - keyword: ALLOW_OVERLAPPING_EXECUTION
    - comparison_operator: '='
    - literal: 'TRUE'
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - keyword: USER_TASK_TIMEOUT_MS
    - comparison_operator: '='
    - literal: '25'
    - keyword: USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE
    - comparison_operator: '='
    - literal: "'XSMALL'"
    - keyword: COPY
    - keyword: GRANTS
    - snowflake_comment:
        keyword: COMMENT
        comparison_operator: '='
        literal: "'Hello world'"
    - keyword: AFTER
    - object_reference:
        identifier: dependency_task
    - keyword: AS
    - statement:
        insert_statement:
          unparsable:
          - keyword: INSERT
          - raw: INTO
          - raw: mytable
          - bracketed:
              start_bracket: (
              raw: ts
              end_bracket: )
          - raw: VALUES
          - bracketed:
              start_bracket: (
              raw: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: t1
    - keyword: AS
    - statement:
        insert_statement:
          unparsable:
          - keyword: INSERT
          - raw: INTO
          - raw: mytable
          - bracketed:
              start_bracket: (
              raw: ts
              end_bracket: )
          - raw: VALUES
          - bracketed:
              start_bracket: (
              raw: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: insert_session
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: SCHEDULE
    - comparison_operator: '='
    - literal: "'USING CRON 45 6 * * * UTC'"
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
          - identifier: sch
          - dot: .
          - identifier: s_session
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: sum
                unparsable:
                - bracketed:
                    start_bracket: (
                    raw: break
                    end_bracket: )
                - raw: OVER
                - bracketed:
                  - start_bracket: (
                  - raw: PARTITION
                  - raw: BY
                  - raw: serial
                  - raw: ORDER
                  - raw: BY
                  - raw: datetime
                  - end_bracket: )
                - raw: AS
                - raw: session_id
            from_clause:
              unparsable:
                keyword: FROM
                bracketed:
                - start_bracket: (
                - raw: SELECT
                - raw: '*'
                - raw: FROM
                - raw: base_table
                - end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: update_session
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: AFTER
    - object_reference:
        identifier: insert_session
    - keyword: AS
    - statement:
        update_statement:
          keyword: UPDATE
          table_reference:
          - identifier: sch
          - dot: .
          - identifier: s_session
          set_clause_list:
          - keyword: SET
          - set_clause:
            - column_reference:
                identifier: lag_datetime
            - comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: lag_datetime
          - comma: ','
          - set_clause:
            - column_reference:
                identifier: row_number
            - comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: row_number
          from_clause:
            unparsable:
            - keyword: FROM
            - bracketed:
              - start_bracket: (
              - raw: SELECT
              - raw: '*'
              - comma: ','
              - bracketed:
                - start_bracket: (
                - raw: sum
                - bracketed:
                    start_bracket: (
                    raw: break
                    end_bracket: )
                - raw: OVER
                - bracketed:
                  - start_bracket: (
                  - raw: PARTITION
                  - raw: BY
                  - raw: serial
                  - raw: ORDER
                  - raw: BY
                  - raw: datetime
                  - end_bracket: )
                - end_bracket: )
              - raw: AS
              - raw: session_id
              - raw: FROM
              - bracketed:
                - start_bracket: (
                - raw: SELECT
                - raw: '*'
                - raw: FROM
                - raw: derived_table
                - end_bracket: )
              - raw: ORDER
              - raw: BY
              - raw: serial
              - comma: ','
              - raw: datetime
              - end_bracket: )
            - raw: AS
            - raw: v
          where_clause:
            keyword: WHERE
            expression:
            - column_reference:
              - identifier: sch
              - dot: .
              - identifier: s_session
              - dot: .
              - identifier: event_id
            - comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: event_id
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
      - identifier: sch
      - dot: .
      - identifier: truncate_session
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: AFTER
    - object_reference:
      - identifier: sch
      - dot: .
      - identifier: update_session
    - keyword: AS
    - statement:
        unparsable:
        - raw: CALL
        - raw: sch
        - raw: .
        - raw: session_agg_insert
        - bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: insert__agg
    - keyword: WAREHOUSE
    - comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: SCHEDULE
    - comparison_operator: '='
    - literal: "'USING CRON 15 7 2 * * UTC'"
    - keyword: AS
    - statement:
        unparsable:
        - raw: CALL
        - raw: auto_device_insert
        - bracketed:
            start_bracket: (
            end_bracket: )
- statement_terminator: ;
