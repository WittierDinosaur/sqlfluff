# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 224addb372bbfd044c49f4d0cb2a8aab4bfd24f5ae53c607995e8f0dee5a3000
file:
- statement:
    set_statement:
      keyword: set
      variable: v1
      comparison_operator: '='
      expression:
        literal: '10'
- statement_terminator: ;
- statement:
    set_statement:
      keyword: set
      variable: v2
      comparison_operator: '='
      expression:
        literal: "'example'"
- statement_terminator: ;
- statement:
    unparsable:
    - raw: set
    - bracketed:
      - start_bracket: (
      - raw: v1
      - comma: ','
      - raw: v2
      - end_bracket: )
    - raw: '='
    - bracketed:
      - start_bracket: (
      - raw: '10'
      - comma: ','
      - raw: "'example'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: set
    - raw: id_threshold
    - raw: '='
    - bracketed:
      - start_bracket: (
      - raw: select
      - raw: count
      - bracketed:
          start_bracket: (
          raw: '*'
          end_bracket: )
      - raw: from
      - raw: table1
      - end_bracket: )
    - raw: /
    - raw: '2'
- statement_terminator: ;
- statement:
    unparsable:
    - raw: set
    - bracketed:
      - start_bracket: (
      - raw: min
      - comma: ','
      - raw: max
      - end_bracket: )
    - raw: '='
    - bracketed:
      - start_bracket: (
      - raw: '40'
      - comma: ','
      - raw: '70'
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: set
    - bracketed:
      - start_bracket: (
      - raw: min
      - comma: ','
      - raw: max
      - end_bracket: )
    - raw: '='
    - bracketed:
      - start_bracket: (
      - raw: '50'
      - comma: ','
      - raw: '2'
      - raw: '*'
      - raw: $min
      - end_bracket: )
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: THIS_ROLE
      comparison_operator: '='
      expression:
        column_reference:
          identifier: CURRENT_ROLE
    unparsable:
      bracketed:
        start_bracket: (
        end_bracket: )
- statement_terminator: ;
