# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
<<<<<<< Updated upstream
_hash: 86e01072588e69d864bfed9ed92966795c09f3e1f3f587b3e85dd41af9fbac18
=======
_hash: 2913941a44608e0de79949944c94ae86828bfd1856ccc8345859accce5910205
>>>>>>> Stashed changes
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: foo
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: bar
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: baz
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
<<<<<<< Updated upstream
      - keyword: GROUPING
      - keyword: SETS
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: foo
        - comma: ','
        - column_reference:
            identifier: bar
        - end_bracket: )
=======
      - grouping_sets_clause:
        - keyword: GROUPING
        - keyword: SETS
        - bracketed:
            start_bracket: (
            grouping_expression_list:
            - expression:
                column_reference:
                  identifier: foo
            - comma: ','
            - expression:
                column_reference:
                  identifier: bar
            end_bracket: )
>>>>>>> Stashed changes
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: medical_license
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: radio_license
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: nurses
      groupby_clause:
      - keyword: group
      - keyword: by
<<<<<<< Updated upstream
      - keyword: grouping
      - keyword: sets
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: medical_license
        - comma: ','
        - column_reference:
            identifier: radio_license
        - end_bracket: )
=======
      - grouping_sets_clause:
        - keyword: grouping
        - keyword: sets
        - bracketed:
            start_bracket: (
            grouping_expression_list:
            - expression:
                column_reference:
                  identifier: medical_license
            - comma: ','
            - expression:
                column_reference:
                  identifier: radio_license
            end_bracket: )
>>>>>>> Stashed changes
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            bracketed:
              start_bracket: (
              star: '*'
              end_bracket: )
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: medical_license
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: radio_license
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: nurses
      groupby_clause:
      - keyword: group
      - keyword: by
<<<<<<< Updated upstream
      - keyword: grouping
      - keyword: sets
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: medical_license
        - comma: ','
        - column_reference:
            identifier: radio_license
        - end_bracket: )
=======
      - grouping_sets_clause:
        - keyword: grouping
        - keyword: sets
        - bracketed:
            start_bracket: (
            grouping_expression_list:
            - expression:
                column_reference:
                  identifier: medical_license
            - comma: ','
            - expression:
                column_reference:
                  identifier: radio_license
            end_bracket: )
>>>>>>> Stashed changes
- statement_terminator: ;
