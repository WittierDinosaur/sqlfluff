# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f5ad0e0746e182f4e86574e347a19619c13ce2085f2d56faa99dde7dd30656a7
file:
- base:
    create_database_statement:
    - keyword: CREATE
    - keyword: DATABASE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - database_reference:
        identifier: database_name
    - keyword: COMMENT
    - literal: '"database_comment"'
    - keyword: LOCATION
    - literal: '"root/database_directory"'
    unparsable:
    - raw: WITH
    - raw: DBPROPERTIES
    - bracketed:
      - start_bracket: (
      - raw: '"property_name"'
      - raw: '='
      - raw: '"property_value"'
      - end_bracket: )
- statement_terminator: ;
- base:
    create_database_statement:
    - keyword: CREATE
    - keyword: SCHEMA
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - database_reference:
        identifier: database_name
    - keyword: COMMENT
    - literal: '"database_comment"'
    - keyword: LOCATION
    - literal: '"root/database_directory"'
    unparsable:
    - raw: WITH
    - raw: DBPROPERTIES
    - bracketed:
      - start_bracket: (
      - raw: '"property_name"'
      - raw: '='
      - raw: '"property_value"'
      - end_bracket: )
- statement_terminator: ;
- base:
    create_database_statement:
    - keyword: CREATE
    - keyword: DATABASE
    - database_reference:
        identifier: customer_db
- statement_terminator: ;
- base:
    create_database_statement:
    - keyword: CREATE
    - keyword: DATABASE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - database_reference:
        identifier: customer_db
- statement_terminator: ;
- base:
    create_database_statement:
    - keyword: CREATE
    - keyword: DATABASE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - database_reference:
        identifier: customer_db
    - keyword: COMMENT
    - literal: "'This is customer database'"
    - keyword: LOCATION
    - literal: "'/user'"
    unparsable:
    - raw: WITH
    - raw: DBPROPERTIES
    - bracketed:
      - start_bracket: (
      - raw: '"ID"'
      - raw: '='
      - raw: '"001"'
      - comma: ','
      - raw: '"Name"'
      - raw: '='
      - raw: "'John'"
      - end_bracket: )
- statement_terminator: ;
