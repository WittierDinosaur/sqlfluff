# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 635d2500c39c8196de32d9392fe15245bc0d6dd506f08be085ae47e312c97439
file:
- base:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - table_reference:
        identifier: experienced_employee_extended
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: experienced_employee
- statement_terminator: ;
- base:
    unparsable:
    - raw: CREATE
    - raw: OR
    - raw: REPLACE
    - raw: GLOBAL
    - raw: TEMPORARY
    - raw: VIEW
    - raw: IF
    - raw: NOT
    - raw: EXISTS
    - raw: experienced_employee
    - bracketed:
      - start_bracket: (
      - raw: ID
      - raw: COMMENT
      - raw: "'Unique identification number'"
      - comma: ','
      - raw: Name
      - end_bracket: )
    - raw: COMMENT
    - raw: "'View for experienced employees'"
    - raw: TBLPROPERTIES
    - bracketed:
      - start_bracket: (
      - raw: '"key1"'
      - raw: '='
      - raw: '"val1"'
      - comma: ','
      - raw: '"key2"'
      - raw: '='
      - raw: '"val2"'
      - end_bracket: )
    - raw: AS
    - raw: SELECT
    - raw: ID
    - comma: ','
    - raw: Name
    - raw: from
    - raw: temp2
- statement_terminator: ;
- base:
    create_view_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: VIEW
    - table_reference:
        identifier: experienced_employee_temp
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: experienced_employee
        limit_clause:
          keyword: limit
          literal: '2'
- statement_terminator: ;
- base:
    create_view_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        identifier: experienced_employee_rep
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: experienced_employee
        limit_clause:
          keyword: limit
          literal: '2'
- statement_terminator: ;
