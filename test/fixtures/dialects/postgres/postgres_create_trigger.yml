# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9bf176d1c53eeebb7a130386fee636d424265f6ab888f97e8b3b1da86cde9a37
file:
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: AFTER
    - keyword: INSERT
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: BEFORE
    - keyword: INSERT
    - keyword: 'on'
    - table_reference:
        identifier: bar
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: AFTER
    - keyword: UPDATE
    - keyword: OF
    - column_reference:
        identifier: bar
    - comma: ','
    - column_reference:
        identifier: baz
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: INSTEAD
    - keyword: OF
    - keyword: DELETE
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: FROM
    - table_reference:
        identifier: baz
    - keyword: DEFERRABLE
    - keyword: INITIALLY
    - keyword: DEFERRED
    - keyword: FOR
    - keyword: EACH
    - keyword: STATEMENT
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: BEFORE
    - keyword: INSERT
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: WHEN
    - bracketed:
        start_bracket: (
        expression:
        - column_reference:
            identifier: a
        - comparison_operator: '='
        - column_reference:
            identifier: b
        end_bracket: )
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: CONSTRAINT
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: BEFORE
    - keyword: INSERT
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: EXECUTE
    - keyword: FUNCTION
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
- statement:
    create_trigger:
    - keyword: CREATE
    - keyword: TRIGGER
    - trigger_reference:
        identifier: foo
    - keyword: BEFORE
    - keyword: INSERT
    - keyword: 'ON'
    - table_reference:
        identifier: bar
    - keyword: REFERENCING
    - keyword: OLD
    - keyword: TABLE
    - keyword: as
    - table_reference:
        identifier: old_table
    - keyword: NEW
    - keyword: TABLE
    - keyword: AS
    - table_reference:
        identifier: new_table
    - keyword: EXECUTE
    - keyword: PROCEDURE
    - function_name_identifier: proc
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            identifier: args
        end_bracket: )
- statement_terminator: ;
