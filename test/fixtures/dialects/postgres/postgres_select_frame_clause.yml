# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d34ffaa060df257cef1f0636b95593fb622738223aa2f99978270aa984adff81
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: venuestate
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venueseats
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venuename
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: first_value
          unparsable:
          - bracketed:
            - start_bracket: (
            - raw: venuename
            - raw: ignore
            - raw: nulls
            - end_bracket: )
          - raw: over
          - bracketed:
            - start_bracket: (
            - raw: partition
            - raw: by
            - raw: venuestate
            - raw: order
            - raw: by
            - raw: venueseats
            - raw: desc
            - raw: rows
            - raw: between
            - raw: unbounded
            - raw: preceding
            - raw: and
            - raw: unbounded
            - raw: following
            - end_bracket: )
          - raw: as
          - raw: col_name
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table_name
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: rank
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: ORDER
            - raw: BY
            - raw: my_column
            - raw: RANGE
            - raw: BETWEEN
            - raw: '12'
            - raw: FOLLOWING
            - raw: AND
            - raw: CURRENT
            - raw: ROW
            - raw: EXCLUDE
            - raw: 'NO'
            - raw: OTHERS
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            identifier: rank
          unparsable:
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: OVER
          - bracketed:
            - start_bracket: (
            - raw: ORDER
            - raw: BY
            - raw: my_column
            - raw: GROUPS
            - raw: UNBOUNDED
            - raw: PRECEDING
            - raw: EXCLUDE
            - raw: GROUP
            - end_bracket: )
- statement_terminator: ;
