# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bde229d8ac3fd15c875323f2c7266d590a153685efc1e6b06b684982c409b520
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
      - bracketed:
        - start_bracket: (
        - raw: n1
        - comma: ','
        - raw: n2
        - comma: ','
        - raw: t1
        - end_bracket: )
      - raw: VALUES
      - bracketed:
        - start_bracket: (
        - raw: '1'
        - comma: ','
        - raw: '2.34'
        - comma: ','
        - raw: "'abc'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
      - raw: VALUES
      - bracketed:
        - start_bracket: (
        - raw: '2'
        - comma: ','
        - raw: '1.56'
        - comma: ','
        - raw: "'ghi'"
        - end_bracket: )
      - comma: ','
      - bracketed:
        - start_bracket: (
        - raw: '3'
        - comma: ','
        - raw: '5.92'
        - comma: ','
        - raw: "'pqr'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
        raw: VALUES
        bracketed:
        - start_bracket: (
        - raw: '4'
        - comma: ','
        - raw: DEFAULT
        - comma: ','
        - raw: "'xyz'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
      - bracketed:
        - start_bracket: (
        - raw: i
        - comma: ','
        - raw: k
        - end_bracket: )
      - raw: SELECT
      - raw: '*'
      - raw: FROM
      - raw: u
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
      - bracketed:
          start_bracket: (
          raw: i
          end_bracket: )
      - raw: SELECT
      - raw: max
      - bracketed:
          start_bracket: (
          raw: j
          end_bracket: )
      - raw: FROM
      - raw: u
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - keyword: DEFAULT
    - keyword: VALUES
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - unparsable:
        bracketed:
        - start_bracket: (
        - raw: SELECT
        - raw: '*'
        - raw: FROM
        - raw: u
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - identifier: s
      - dot: .
      - identifier: t
    - unparsable:
      - bracketed:
        - start_bracket: (
        - raw: c1
        - comma: ','
        - raw: c2
        - comma: ','
        - raw: c3
        - end_bracket: )
      - raw: VALUES
      - bracketed:
        - start_bracket: (
        - bracketed:
          - start_bracket: (
          - raw: SELECT
          - raw: x
          - raw: FROM
          - raw: y
          - end_bracket: )
        - comma: ','
        - raw: "'val1'"
        - comma: ','
        - raw: "'val2'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        identifier: t
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: adate
        end_bracket: )
    - values_insert_clause:
        keyword: values
        bracketed:
          start_bracket: (
          bare_function: current_timestamp
          end_bracket: )
