# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: de677f2afd5a5690aa19915fe29121c51d97ccb6cba1e486d24b534739ac7642
file:
  statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: mycte1
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  identifier: foo
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: bar
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: baz
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: mytable
          end_bracket: )
      insert_statement:
        unparsable:
        - keyword: INSERT
        - raw: INTO
        - raw: table2
        - bracketed:
          - start_bracket: (
          - column_reference:
              identifier: column1
          - comma: ','
          - column_reference:
              identifier: column2
          - comma: ','
          - column_reference:
              identifier: column3
          - end_bracket: )
        - bracketed:
          - start_bracket: (
          - raw: WITH
          - raw: mycte2
          - raw: AS
          - bracketed:
            - start_bracket: (
            - raw: SELECT
            - raw: foo
            - comma: ','
            - raw: bar
            - comma: ','
            - raw: baz
            - raw: FROM
            - raw: mycte1
            - end_bracket: )
          - raw: SELECT
          - raw: foo
          - comma: ','
          - raw: bar
          - comma: ','
          - raw: baz
          - raw: FROM
          - raw: mycte2
          - end_bracket: )
  statement_terminator: ;
