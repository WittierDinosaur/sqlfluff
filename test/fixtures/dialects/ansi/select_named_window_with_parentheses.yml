# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0688499e380c7d1b4f06b9ecb5aa32b074c75d7eae635efb3932e0b61f9ecbd9
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: NTH_VALUE
          unparsable:
          - bracketed:
            - start_bracket: (
            - raw: bar
            - comma: ','
            - raw: '1'
            - end_bracket: )
          - raw: OVER
          - bracketed:
              start_bracket: (
              raw: w1
              end_bracket: )
          - raw: AS
          - raw: baz
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: NTH_VALUE
          unparsable:
          - bracketed:
            - start_bracket: (
            - raw: bar
            - comma: ','
            - raw: '1'
            - end_bracket: )
          - raw: OVER
          - bracketed:
              start_bracket: (
              end_bracket: )
          - raw: AS
          - raw: foo
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t
      named_window:
        keyword: WINDOW
        named_window_expression:
          identifier: w1
          keyword: AS
          bracketed:
            start_bracket: (
            window_specification:
              partitionby_clause:
              - keyword: PARTITION
              - keyword: BY
              - expression:
                  column_reference:
                    identifier: x
              - comma: ','
              - expression:
                  column_reference:
                    identifier: y
              - comma: ','
              - expression:
                  column_reference:
                    identifier: z
              orderby_clause:
              - keyword: ORDER
              - keyword: BY
              - column_reference:
                  identifier: abc
              - keyword: DESC
            end_bracket: )
