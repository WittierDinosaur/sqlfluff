# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 63dcbd2dcc5ef1e66b98944ddc8bee94fb7da4237c17ff31a40e1f04b2fd5795
file:
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: users
    - bracketed:
      - start_bracket: (
      - raw: username
      - raw: TEXT
      - comma: ','
      - raw: age
      - raw: INT
      - raw: CHECK
      - bracketed:
        - start_bracket: (
        - raw: age
        - raw: '>'
        - raw: '18'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: users
    - bracketed:
      - start_bracket: (
      - raw: username
      - raw: TEXT
      - comma: ','
      - raw: age
      - raw: INT
      - raw: CHECK
      - bracketed:
        - start_bracket: (
        - raw: age
        - raw: IS
        - raw: NOT
        - raw: 'NULL'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: Persons
    - bracketed:
      - start_bracket: (
      - raw: ID
      - raw: int
      - raw: NOT
      - raw: 'NULL'
      - comma: ','
      - raw: LastName
      - raw: varchar
      - bracketed:
          start_bracket: (
          raw: '255'
          end_bracket: )
      - raw: NOT
      - raw: 'NULL'
      - comma: ','
      - raw: FirstName
      - raw: varchar
      - bracketed:
          start_bracket: (
          raw: '255'
          end_bracket: )
      - comma: ','
      - raw: Age
      - raw: int
      - comma: ','
      - raw: City
      - raw: varchar
      - bracketed:
          start_bracket: (
          raw: '255'
          end_bracket: )
      - comma: ','
      - raw: CONSTRAINT
      - raw: CHK_Person
      - raw: CHECK
      - bracketed:
        - start_bracket: (
        - raw: Age
        - raw: '>='
        - raw: '18'
        - raw: AND
        - raw: City
        - raw: '='
        - raw: "'Sandnes'"
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
