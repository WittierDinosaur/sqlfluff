# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ecd8aa5d0c22d7ff60625460534bb542265ec5e5fad7db2ebc9e04ca44bc1e8f
file:
- statement:
    select_statement:
      select_clause:
        keyword: Select
        select_clause_element:
          column_reference:
            identifier: A
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - identifier: Sys
              - dot: .
              - identifier: dual
      where_clause:
        keyword: where
        expression:
          column_reference:
            identifier: a
        unparsable:
          raw: in
          bracketed:
          - start_bracket: (
          - raw: "'RED'"
          - comma: ','
          - raw: "'GREEN'"
          - comma: ','
          - raw: "'BLUE'"
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: tbl_b
- statement_terminator: ;
- statement:
    insert_statement:
      unparsable:
      - keyword: insert
      - raw: into
      - raw: sch
      - raw: .
      - raw: tbl_b
      - bracketed:
          start_bracket: (
          raw: col1
          end_bracket: )
      - raw: values
      - bracketed:
          start_bracket: (
          raw: '123'
          end_bracket: )
- statement_terminator: ;
- statement:
    with_compound_statement:
      unparsable:
      - keyword: with
      - raw: tmp
      - raw: as
      - bracketed:
        - start_bracket: (
        - raw: select
        - raw: '*'
        - raw: from
        - raw: blah
        - end_bracket: )
      - raw: select
      - raw: a
      - comma: ','
      - raw: b
      - raw: from
      - raw: tmp
- statement_terminator: ;
