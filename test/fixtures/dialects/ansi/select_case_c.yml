# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: eda5c7fbf668dbbcf2f43e63dc0c9c40cf034d41850bd8409288510268c28aca
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: col0
      - comma: ','
      - select_clause_element:
          expression:
            case_expression:
            - keyword: case
            - keyword: when
            - expression:
                column_reference:
                  identifier: col1
            - keyword: then
            - expression:
                column_reference:
                  identifier: col2
            - keyword: else
            - expression:
                column_reference:
                  identifier: col3
            - keyword: end
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: text
          alias_expression:
            keyword: as
            identifier: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: col0
      - comma: ','
      - select_clause_element:
          expression:
          - case_expression:
            - keyword: case
            - keyword: when
            - expression:
                column_reference:
                  identifier: col1
            - keyword: then
            - expression:
                column_reference:
                  identifier: col2
            - keyword: else
            - expression:
                column_reference:
                  identifier: col3
            - keyword: end
          - cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: int
          - cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: float
          alias_expression:
            keyword: as
            identifier: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: col0
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: cast
          unparsable:
          - bracketed:
            - start_bracket: (
            - raw: case
            - raw: when
            - raw: col1
            - raw: then
            - raw: col2
            - raw: else
            - raw: col3
            - raw: end
            - raw: as
            - raw: text
            - end_bracket: )
          - raw: as
          - raw: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table1
- statement_terminator: ;
